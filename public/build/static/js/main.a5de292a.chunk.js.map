{"version":3,"sources":["assets/images/VisitTogether.png","assets/images/conc1.png","assets/images/tour1.jpg","assets/images/tour2.jpg","navigation/Header.js","navigation/Footer.js","routes/Tours.js","routes/Concerts.js","routes/RegForm.js","routes/User.js","routes/Translation.js","routes/fakeData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LINKS","path","title","Header","this","props","location","pathname","id","className","to","src","Logo","alt","type","placeholder","aria-label","map","link","key","Component","withRouter","Footer","Tours","style","width","href","Concerts","state","concerts","redirectTo","fetch","then","response","json","console","log","setState","push","length","concert","index","onClick","goToConcert","body","date","RegForm","User","user","Translation","Conc1","Tour1","Tour2","loadFakeData","match","params","isShowHiddenButton","hidden","App","hideMenu","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,yPCKrCC,EAAQ,CACZ,CACEC,KAAM,IACNC,MAAO,YAET,CACED,KAAM,SACNC,MAAO,UAILC,E,uKAEF,IAAMF,EAAOG,KAAKC,MAAMC,SAASC,SACjC,OAEE,6BACE,yBAAKC,GAAG,kBAAkBC,UAAU,kDAClC,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,SACrB,yBAAKA,UAAU,QAAQE,IAAKC,IAAMC,IAAI,UAExC,0BAAMJ,UAAU,iCACd,2BACEA,UAAU,uBACVK,KAAK,SACLC,YAAY,SACZC,aAAW,WAEb,4BAAQP,UAAU,6BAA6BK,KAAK,UAApD,WAIF,yBAAKL,UAAU,2BAA2BD,GAAG,aAC3C,wBAAIC,UAAU,mBACRT,EAAMiB,KAAI,SAAAC,GAAI,OACd,wBAAIC,IAAKD,EAAKjB,KAAMQ,UAAU,iBAC5B,kBAAC,IAAD,CAAMA,UAAS,mBAAcR,IAASiB,EAAKjB,MAAQ,UAAYS,GAAIQ,EAAKjB,MACrEiB,EAAKhB,aAOlB,yBAAKO,UAAU,gBACf,4BAAQK,KAAK,SAASL,UAAU,gBAAhC,WAGA,4BAAQK,KAAK,SAASL,UAAU,gBAAhC,YAMF,yBAAKD,GAAG,YAAYC,UAAU,a,GA3CjBW,aAkDNC,cAAWlB,GCnCXmB,E,uKA3BX,OACE,4BAAQb,UAAU,UAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,IACb,wBAAIA,UAAU,cAAd,YACA,uBAAGA,UAAU,4BAAb,mBACA,uBAAGA,UAAU,4BAAb,0CAKN,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,cAAcE,IAAI,SAASE,IAAI,WAC9C,yBAAKJ,UAAU,mBAAmBE,IAAI,SAASE,IAAI,WACnD,yBAAKJ,UAAU,cAAcE,IAAI,SAASE,IAAI,cAIhD,yBAAKJ,UAAU,oBACb,yBAAKA,UAAU,aAAf,2B,GAtBWW,aCgDNG,E,uKA9CX,OACE,8BACE,yBAAKd,UAAU,aACb,yBAAKA,UAAU,OAAOe,MAAO,CAAEC,MAAO,UACpC,yBAAKhB,UAAU,iBAAiBE,IAAI,cAAcE,IAAI,UACtD,yBAAKJ,UAAU,aACb,wBAAIA,UAAU,cAAd,iCACA,uBAAGA,UAAU,aAAb,wBAGA,uBAAGiB,KAAK,IAAIjB,UAAU,yBAAtB,WAKJ,yBAAKA,UAAU,OAAOe,MAAO,CAAEC,MAAO,UACpC,yBAAKhB,UAAU,iBAAiBE,IAAI,cAAcE,IAAI,UACtD,yBAAKJ,UAAU,aACb,wBAAIA,UAAU,cAAd,yCACA,uBAAGA,UAAU,aAAb,0ZAGA,uBAAGiB,KAAK,IAAIjB,UAAU,yBAAtB,WAKJ,yBAAKA,UAAU,OAAOe,MAAO,CAAEC,MAAO,UACpC,yBAAKhB,UAAU,iBAAiBE,IAAI,cAAcE,IAAI,UACtD,yBAAKJ,UAAU,aACb,wBAAIA,UAAU,cAAd,aACA,uBAAGA,UAAU,aAAb,kGAIA,uBAAGiB,KAAK,IAAIjB,UAAU,yBAAtB,iB,GArCMW,aCiELO,E,kDA/Db,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IAEDuB,MAAQ,CACXC,SAAU,GACVC,WAAY,MALG,E,gEASE,IAAD,OAElBC,MAAM,kBACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAER,SAAUK,S,kCAIlB1B,GACVJ,KAAKiC,SAAS,CAAEP,WAAW,aAAD,OAAetB,O,+BAGjC,IAAD,OACP,GAAIJ,KAAKwB,MAAME,WACb,OAAO,kBAAC,IAAD,CAAUpB,GAAIN,KAAKwB,MAAME,WAAYQ,MAAI,IAGlD,IAAMT,EAAWzB,KAAKwB,MAAMC,SAC5B,OAAKA,EAASU,OAKZ,8BACE,8CAEEV,EAASZ,KAAI,SAACuB,EAASC,GAAV,OACb,yBACEtB,IAAKsB,EAAOhC,UAAU,OACtBe,MAAO,CAAEC,MAAO,SAChBiB,QAAS,kBAAM,EAAKC,YAAYH,EAAQhC,MAExC,yBAAKC,UAAU,iBAAiBE,IAAI,cAAeE,IAAI,aACvD,yBAAKJ,UAAU,aACb,wBAAIA,UAAU,cACX+B,EAAQtC,OAEX,uBAAGO,UAAU,aACV+B,EAAQI,MAEX,uBAAGnC,UAAU,aACV+B,EAAQK,YAtBZ,+C,GA/BUzB,aCKR0B,E,uKAJX,OAAO,4C,GAFW1B,aCkBP2B,E,uKAhBX,IAAIC,EAES,QAFTA,EAGU,YAGd,OACE,6BACGA,EACD,6BACCA,O,GAZU5B,a,mDCyEJ6B,GCrENC,IAMAC,IAMAC,I,kDDdL,WAAY/C,GAAQ,IAAD,8BACf,cAAMA,IAQVgD,aAAe,WACbtB,MAAM,qBAAsB,EAAK1B,MAAMiD,MAAMC,OAAO/C,IAC/CwB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACF,EAAKG,SAAS,CAAEG,QAASN,QAV/B,EAAKN,MAAQ,CACTY,QAAS,GACTgB,oBAAoB,GALT,E,gEA0BfpD,KAAKiD,iB,+BAKC,IAAD,SACmCjD,KAAKwB,MAArC4B,EADH,EACGA,mBAAoBhB,EADvB,EACuBA,QAC5B,OAAKA,EAKD,8BACI,8CAGI,yBAAK/B,UAAU,OAAOe,MAAO,CAAEC,MAAO,UAClC,yBAAKhB,UAAU,iBAAiBE,IAAI,cAAcE,IAAI,4IACtD,yBAAKJ,UAAU,aACX,wBAAIA,UAAU,cACT+B,EAAQtC,OAEb,uBAAGO,UAAU,aACR+B,EAAQI,MAEb,uBAAGnC,UAAU,aACR+B,EAAQK,QAMzB,4BAAQH,QAAS,kBAAM,EAAKL,SAAS,CAACmB,oBAAqBA,KAAsB/C,UAAU,gBAA3F,kBAIA,4BAAQiC,QAAS,kBAAM,EAAKW,gBAAgBI,OAAQD,EAAoB/C,UAAU,gBAAlF,mBA5BG,+C,GAnCOW,cE2CXsC,G,wDAjCb,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IAEDuB,MAAQ,CACX+B,UAAU,GAJK,E,qDASjB,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAAC3D,KAAK,IAAI4D,UAAWlC,IACjC,kBAAC,IAAD,CAAOiC,OAAK,EAAC3D,KAAK,SAAS4D,UAAWtC,IACtC,kBAAC,IAAD,CAAOqC,OAAK,EAAC3D,KAAK,gBAAgB4D,UAAWf,IAC7C,kBAAC,IAAD,CAAOc,OAAK,EAAC3D,KAAK,QAAQ4D,UAAWd,IACrC,kBAAC,IAAD,CAAOa,OAAK,EAAC3D,KAAK,gBAAgB4D,UAAWZ,IAE7C,kBAAC,IAAD,CAAOW,OAAK,EAAC3D,KAAK,KAAlB,QAKF,kBAAC,EAAD,Y,GA3BQmB,cCAE0C,QACW,cAA7BC,OAAOzD,SAAS0D,UAEe,UAA7BD,OAAOzD,SAAS0D,UAEhBD,OAAOzD,SAAS0D,SAASV,MACvB,2DCXNW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxC,MAAK,SAAAyC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzC,QAAQyC,MAAMA,EAAMC,c","file":"static/js/main.a5de292a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VisitTogether.c38928d6.png\";","module.exports = __webpack_public_path__ + \"static/media/conc1.9ffabe70.png\";","module.exports = __webpack_public_path__ + \"static/media/tour1.a5ce8f77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tour2.ba708819.jpg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport Logo from \"./../assets/images/VisitTogether.png\";\r\n\r\nconst LINKS = [\r\n  {\r\n    path: '/',\r\n    title: 'Concerts'\r\n  },\r\n  {\r\n    path: '/tours',\r\n    title: 'Tours'\r\n  },\r\n]\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const path = this.props.location.pathname\r\n    return (\r\n\r\n      <div>\r\n        <nav id=\"outer-container\" className=\"navbar matshadow navbar-expand-lg navbar-light\">\r\n          <Link to=\"/\" className=\"h-100\">\r\n            <img className=\"h-100\" src={Logo} alt=\"logo\" />\r\n          </Link>\r\n          <form className=\"form-inline mx-5 my-2 my-lg-0\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-light my-2 my-sm-0\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav mx-5\">\r\n                { LINKS.map(link =>\r\n                  <li key={link.path} className=\"nav-item mx-3\">\r\n                    <Link className={`nav-link ${path === link.path && 'active'}`} to={link.path}>\r\n                      {link.title}\r\n                    </Link>\r\n                  </li>)\r\n                }\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"registr mx-3\">\r\n          <button type=\"button\" className=\"btn btn-info\">\r\n            Sign up\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-info\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n        </nav>\r\n\r\n        <div id=\"page-wrap\" className=\"App\"></div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className=\"container\">\r\n          <div className=\"d-flex flex-row align-items-end\">\r\n            <div className=\"\">\r\n              <h5 className=\"black-text\">Contacts</h5>\r\n              <p className=\"grey-text text-lighten-4\">Minsk, Belarus.</p>\r\n              <p className=\"grey-text text-lighten-4\">\r\n                +375(29)306-58-76, +375(44)518-00-78.\r\n              </p>\r\n              </div>\r\n\r\n        <div className=\"icons d-flex ml-auto\">\r\n          <img className='social_icon' src=\"ig.png\" alt=\"socmed\" />\r\n          <img className='social_icon mx-2' src=\"tr.png\" alt=\"socmed\" />\r\n          <img className='social_icon' src=\"fb.png\" alt=\"socmed\" />\r\n         </div>\r\n         </div>\r\n       </div>\r\n        <div className=\"footer-copyright\">\r\n          <div className=\"container\">© 2020 By Ruby</div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Tours extends Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <div className=\"container\">\r\n          <div className=\"card\" style={{ width: \"18rem\" }}>\r\n            <img className=\"concerts w-100\" src=\"./tour1.jpg\" alt=\"tour1\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">RAMMSTEIN EUROPE STADIUM TOUR</h5>\r\n              <p className=\"card-text\">\r\n                17.07.2020 20:00 18+\r\n              </p>\r\n              <a href=\"/\" className=\"btn btn-success moren\">\r\n                Tours\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\" style={{ width: \"18rem\" }}>\r\n            <img className=\"concerts w-100\" src=\"./tour2.jpg\" alt=\"tour2\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">IRON MAIDEN: LEGACY OF THE BEAST TOUR</h5>\r\n              <p className=\"card-text\">\r\n                В рамках мирового тура 2020 IRON MAIDEN (Айрон Мэйден) выступят в Варшаве 5 июля на стадионе PGW Narodowy.\r\n              </p>\r\n              <a href=\"/\" className=\"btn btn-success moren\">\r\n                Tours\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\" style={{ width: \"18rem\" }}>\r\n            <img className=\"concerts w-100\" src=\"./tour3.jpg\" alt=\"tour3\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Lady Gaga</h5>\r\n              <p className=\"card-text\">\r\n                Some quick example text to build on the card title and make up\r\n                the bulk of the card's content.\r\n              </p>\r\n              <a href=\"/\" className=\"btn btn-success moren\">\r\n                Tours\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tours;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Concerts extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      concerts: [],\r\n      redirectTo: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch('/json/concerts')\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      console.log(json)\r\n      this.setState({ concerts: json });\r\n    })\r\n  }\r\n\r\n  goToConcert(id) {\r\n    this.setState({ redirectTo: `/concerts/${id}` })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirectTo) {\r\n      return <Redirect to={this.state.redirectTo} push/>\r\n    }\r\n\r\n    const concerts = this.state.concerts;\r\n    if (!concerts.length) {\r\n      return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n      <main>\r\n        <h5> Some Concerts</h5>\r\n\r\n        { concerts.map((concert, index) => (\r\n          <div\r\n            key={index} className=\"card\"\r\n            style={{ width: \"18rem\" }}\r\n            onClick={() => this.goToConcert(concert.id)}\r\n          >\r\n            <img className=\"concerts w-100\" src=\"/profil.jpg\"  alt=\"concert1\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">\r\n                {concert.title}\r\n              </h5>\r\n              <p className=\"card-text\">\r\n                {concert.body}\r\n              </p>\r\n              <p className=\"card-text\">\r\n                {concert.date}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )) }\r\n\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Concerts;\r\n","import React, { Component } from \"react\";\r\n\r\nclass RegForm extends Component {\r\n  render() {\r\n    return <h5> regForm</h5>;\r\n  }\r\n}\r\n\r\nexport default RegForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass User extends Component {\r\n  render() {\r\n    let user = {\r\n      id: 1,\r\n      firstName: \"Darya\",\r\n      secondName: \"Kovalchuk\",\r\n      email: \"daryakov@example.com\"\r\n    };\r\n    return (\r\n      <div>\r\n        {user.firstName}\r\n        <br />\r\n        {user.secondName}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { Component } from \"react\";\r\nimport { FAKE_DATA } from './fakeData'\r\n\r\nclass Translation extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            concert: {},\r\n            isShowHiddenButton: true,\r\n        }\r\n    }\r\n\r\n    loadFakeData = () => {\r\n      fetch('/json/translation/'+ this.props.match.params.id)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n              this.setState({ concert: json });\r\n          })\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*const loadFakeData = new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve(FAKE_DATA.find(concert => concert.id == this.props.match.params.id));\r\n          }, 1000);\r\n        });\r\n\r\n        loadFakeData.then(data => this.setState({ concert: data }))\r\n        */\r\n        this.loadFakeData()\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { isShowHiddenButton, concert } = this.state;\r\n        if (!concert) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <main>\r\n                <h5> Some Concerts</h5>\r\n\r\n                {\r\n                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                        <img className=\"concerts w-100\" src=\"/profil.jpg\" alt=\"твое изображение для всех\" />\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">\r\n                                {concert.title}\r\n                            </h5>\r\n                            <p className=\"card-text\">\r\n                                {concert.body}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                {concert.date}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <button onClick={() => this.setState({isShowHiddenButton: !isShowHiddenButton})} className='btn btn-info'>\r\n                  Change content\r\n                </button>\r\n\r\n                <button onClick={() => this.loadFakeData()} hidden={isShowHiddenButton} className='btn btn-info'>\r\n                  InvisbleButton\r\n                </button>\r\n\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Translation;\r\n","import Conc1 from \"./../assets/images/conc1.png\";\r\nimport Tour1 from \"./../assets/images/tour1.jpg\";\r\nimport Tour2 from \"./../assets/images/tour2.jpg\";\r\n\r\nexport const FAKE_DATA = [\r\n  {\r\n    img: Conc1,\r\n    title: \"БИ 2\",\r\n    body: 'Стадион \"Динамо\"',\r\n    id: 1,\r\n  },\r\n  {\r\n    img: Tour1,\r\n    title: \"RAMMSTEIN\",\r\n    body: 'EUROPE STADIUM TOUR',\r\n    id: 2,\r\n  },\r\n  {\r\n    img: Tour2,\r\n    title: \"IRON MAIDEN\",\r\n    body: '',\r\n    id: 3,\r\n  },\r\n]\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Header from \"./navigation/Header\";\r\nimport Footer from \"./navigation/Footer\";\r\nimport Tours from \"./routes/Tours\";\r\nimport Concerts from \"./routes/Concerts\";\r\nimport RegForm from \"./routes/RegForm\";\r\nimport User from \"./routes/User\";\r\nimport Translation from \"./routes/Translation\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hideMenu: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Header />\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Concerts} />\r\n            <Route exact path=\"/tours\" component={Tours} />\r\n            <Route exact path=\"/registration\" component={RegForm} />\r\n            <Route exact path=\"/user\" component={User} />\r\n            <Route exact path=\"/concerts/:id\" component={Translation} />\r\n\r\n            <Route exact path=\"*\">\r\n              404\r\n            </Route>\r\n          </Switch>\r\n\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./bootstrap.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}